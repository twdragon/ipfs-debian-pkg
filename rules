#!/usr/bin/make -f

include /usr/share/dpkg/architecture.mk

build:
ifeq (, $(shell which go))
	$(eval TMP := $(shell mktemp -d))
	$(eval GOVERSION := $(shell cat ./debian/go-version | tr -d "\n"))
	@echo "No Go installation found, downloading version $(GOVERSION) for $(DEB_TARGET_ARCH) to $(TMP)"
	@mkdir -p $(TMP)
	curl -sSL "https://go.dev/dl/go$(GOVERSION).$(shell uname -s | tr '[:upper:]' '[:lower:]')-$(DEB_TARGET_ARCH).tar.gz" | tar -C $(TMP) -xz
	$(eval PATH := $(TMP)/go/bin:$(PATH)) 
else
	@echo "Found Go installation: $(shell go version)"
endif
	make build
	if [ ! -z "$(TMP)" ] ; then rm -rf "$(TMP)" ; fi
	@echo 'Running bash completion generation'
	./cmd/ipfs/ipfs commands completion bash > ./debian/ipfs-kubo.bash-completion

%:
	dh $@ --with bash-completion

override_dh_builddeb:
	dh_builddeb -- -Zgzip

override_dh_dwz:
	@echo 'DH_DWZ overridden'

override_dh_auto_clean:
	@echo 'DH_AUTO_CLEAN overridden'
	rm -f ./cmd/ipfs/ipfs

override_dh_auto_install:
	@echo 'DH_AUTO_INSTALL overridden'

override_dh_installsystemd:
	dh_installsystemd --name=ipfs ipfs.service

